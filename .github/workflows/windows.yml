# DO NOT EDIT - GENERATED FROM .github/workflows-in/windows.ys

name: windows
defaults:
  run:
    shell: bash -e -x {0}
'on':
  workflow_dispatch: null
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
env:
  PROJ_PKG_NAME: c4core-
  PROJ_PFX_TARGET: c4core-
  PROJ_PFX_CMAKE: C4CORE_
  CMAKE_FLAGS: null
  NUM_JOBS_BUILD: null
jobs:
  windows:
    if: always()
    continue-on-error: true
    name: ${{matrix.cxx}}/c++${{matrix.std}}/${{matrix.bt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - std: 11
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 11
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
        - std: 14
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 14
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
        - std: 17
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 17
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
        - std: 20
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 20
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
    env:
      STD: ${{matrix.std}}
      CXX_: ${{matrix.cxx}}
      BT: ${{matrix.bt}}
      BITLINKS: ${{matrix.bitlinks}}
      VG: ${{matrix.vg}}
      SAN: ${{matrix.san}}
      LINT: ${{matrix.lint}}
      OS: ${{matrix.os}}
    steps:
    - name: checkout (action)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: install requirements
      run: source .github/reqs.sh && c4_install_test_requirements $OS
    - name: show info
      run: source .github/setenv.sh && c4_show_info
    - name: shared64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared64
    - name: shared64-build
      run: source .github/setenv.sh && c4_build_test shared64
    - name: shared64-run
      run: source .github/setenv.sh && c4_run_test shared64
    - name: shared64-pack
      run: source .github/setenv.sh && c4_package shared64
    - name: static64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static64
    - name: static64-build
      run: source .github/setenv.sh && c4_build_test static64
    - name: static64-run
      run: source .github/setenv.sh && c4_run_test static64
    - name: static64-pack
      run: source .github/setenv.sh && c4_package static64
    - name: static32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static32
    - name: static32-build
      run: source .github/setenv.sh && c4_build_test static32
    - name: static32-run
      run: source .github/setenv.sh && c4_run_test static32
    - name: static32-pack
      run: source .github/setenv.sh && c4_package static32
    - name: shared32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared32
    - name: shared32-build
      run: source .github/setenv.sh && c4_build_test shared32
    - name: shared32-run
      run: source .github/setenv.sh && c4_run_test shared32
    - name: shared32-pack
      run: source .github/setenv.sh && c4_package shared32
  noexc:
    if: always()
    continue-on-error: false
    name: noexc/${{matrix.cxx}}/c++${{matrix.std}}/${{matrix.bt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - std: 11
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 11
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
        - std: 20
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 20
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
    env:
      CXXFLAGS: /EHa- /EHs- /EHc /EHr- /GR- /wd4530
      STD: ${{matrix.std}}
      CXX_: ${{matrix.cxx}}
      BT: ${{matrix.bt}}
      BITLINKS: ${{matrix.bitlinks}}
      VG: ${{matrix.vg}}
      SAN: ${{matrix.san}}
      LINT: ${{matrix.lint}}
      OS: ${{matrix.os}}
    steps:
    - name: checkout (action)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: install requirements
      run: source .github/reqs.sh && c4_install_test_requirements $OS
    - name: show info
      run: source .github/setenv.sh && c4_show_info
    - name: shared64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared64
    - name: shared64-build
      run: source .github/setenv.sh && c4_build_test shared64
    - name: shared64-run
      run: source .github/setenv.sh && c4_run_test shared64
    - name: shared64-pack
      run: source .github/setenv.sh && c4_package shared64
    - name: static64-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static64
    - name: static64-build
      run: source .github/setenv.sh && c4_build_test static64
    - name: static64-run
      run: source .github/setenv.sh && c4_run_test static64
    - name: static64-pack
      run: source .github/setenv.sh && c4_package static64
    - name: static32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static32
    - name: static32-build
      run: source .github/setenv.sh && c4_build_test static32
    - name: static32-run
      run: source .github/setenv.sh && c4_run_test static32
    - name: static32-pack
      run: source .github/setenv.sh && c4_package static32
    - name: shared32-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared32
    - name: shared32-build
      run: source .github/setenv.sh && c4_build_test shared32
    - name: shared32-run
      run: source .github/setenv.sh && c4_run_test shared32
    - name: shared32-pack
      run: source .github/setenv.sh && c4_package shared32
  clang:
    if: always()
    continue-on-error: false
    name: clang/${{matrix.cxx}}/c++${{matrix.std}}/${{matrix.bt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - std: 11
          cxx: vs2022
          bt: Debug
          os: windows-2022
          bitlinks: shared64 static32
        - std: 11
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64 static32
    env:
      STD: ${{matrix.std}}
      CXX_: ${{matrix.cxx}}
      BT: ${{matrix.bt}}
      BITLINKS: ${{matrix.bitlinks}}
      VG: ${{matrix.vg}}
      SAN: ${{matrix.san}}
      LINT: ${{matrix.lint}}
      OS: ${{matrix.os}}
      BDIR: build_${{matrix.arch}}_${{matrix.bt}}_${{matrix.std}}
      IDIR: install_${{matrix.arch}}_${{matrix.bt}}_${{matrix.std}}
    steps:
    - name: checkout (action)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: show info
      run: source .github/setenv.sh && c4_show_info
    - name: configure
      run: |
        set -x
        echo BDIR=$BDIR
        echo IDIR=$IDIR
        cmake -S . -B $BDIR \
          -G "Unix Makefiles" \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_INSTALL_PREFIX=$IDIR \
          -DCMAKE_BUILD_TYPE=${{matrix.bt}} \
          -DC4_CXX_STANDARD=${{matrix.std}} \
          -DCXX_STANDARD=${{matrix.std}} \
          -DC4CORE_DEV=ON \
          -DC4CORE_BUILD_BENCHMARKS=OFF \
          -DC4CORE_SANITIZE=OFF \
          -DC4CORE_LINT=OFF \
          -DC4CORE_VALGRIND=OFF
    - name: build
      run: cmake --build $BDIR -j --target c4core-test-build
    - name: run
      run: cmake --build $BDIR -j --target c4core-test-run
  arm:
    name: arm/${{matrix.cxx}}/c++${{matrix.std}}/${{matrix.bt}}
    if: always()
    continue-on-error: false
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - std: 11
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64arm
        - std: 20
          cxx: vs2022
          bt: Release
          os: windows-2022
          bitlinks: shared64arm
    env:
      STD: ${{matrix.std}}
      CXX_: ${{matrix.cxx}}
      BT: ${{matrix.bt}}
      BITLINKS: ${{matrix.bitlinks}}
      VG: ${{matrix.vg}}
      SAN: ${{matrix.san}}
      LINT: ${{matrix.lint}}
      OS: ${{matrix.os}}
    steps:
    - name: checkout (action)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: install requirements
      run: source .github/reqs.sh && c4_install_test_requirements $OS
    - name: show info
      run: source .github/setenv.sh && c4_show_info
    - name: shared64arm-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared64arm
    - name: shared64arm-build
      run: source .github/setenv.sh && c4_build_test shared64arm
    - name: shared64arm-pack
      run: source .github/setenv.sh && c4_package shared64arm
    - name: static64arm-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static64arm
    - name: static64arm-build
      run: source .github/setenv.sh && c4_build_test static64arm
    - name: static64arm-pack
      run: source .github/setenv.sh && c4_package static64arm
    - name: shared32arm-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test shared32arm
    - name: shared32arm-build
      run: source .github/setenv.sh && c4_build_test shared32arm
    - name: shared32arm-pack
      run: source .github/setenv.sh && c4_package shared32arm
    - name: static32arm-configure---------------------------------------------------
      run: source .github/setenv.sh && c4_cfg_test static32arm
    - name: static32arm-build
      run: source .github/setenv.sh && c4_build_test static32arm
    - name: static32arm-pack
      run: source .github/setenv.sh && c4_package static32arm
